import { StyleSheet, Platform } from 'react-native';
import { spacing, layout, useTheme } from '../../context/ThemeContext';

const createStyles = (colors) =>
	StyleSheet.create({
		container: {
			flex: 1,
			backgroundColor: colors.background.primary,
			paddingTop: Platform.OS === 'ios' ? 50 : 0,
		},
		settingsList: {
			flex: 1,
		},
		profileBackground: {
			backgroundColor: colors.background.secondary,
			marginTop: -50,
			paddingTop: 50,
		},
		profileSectionContainer: {
			paddingVertical: spacing.md,
		},
		profileSection: {
			paddingLeft: spacing.xs,
			paddingRight: spacing.xs,
			flexDirection: 'row',
			alignItems: 'center',
			width: '100%',
		},
		profileInfo: {
			marginLeft: spacing.md,
			flex: 1,
			justifyContent: 'center',
		},
		profileContent: {
			flexDirection: 'row',
			alignItems: 'center',
			paddingHorizontal: spacing.md,
			width: '100%',
			justifyContent: 'flex-start',
		},
		profileName: {
			fontSize: 18,
			fontWeight: '500',
			color: colors.text.primary,
			marginLeft: spacing.sm,
			flexShrink: 1,
			maxWidth: '80%',
			textAlign: 'center',
		},
		profileEmail: {
			color: colors.text.secondary,
		},
		avatar: {
			width: 60,
			height: 60,
			borderRadius: 30,
			overflow: 'hidden',
			justifyContent: 'center',
			alignItems: 'center',
			marginLeft: 0,
		},
		avatarImage: {
			width: '100%',
			height: '100%',
		},
		editOverlay: {
			position: 'absolute',
			bottom: -5,
			right: -5,
			backgroundColor: colors.primary,
			borderRadius: 12,
			padding: 5,
		},
		settingSection: {
			padding: spacing.md,
			borderBottomWidth: 1,
			borderBottomColor: colors.border,
		},
		sectionTitle: {
			fontSize: 20,
			fontWeight: '500',
			marginBottom: spacing.sm,
			color: colors.text.primary,
			opacity: 0.9,
		},
		settingItem: {
			flexDirection: 'row',
			alignItems: 'center',
			justifyContent: 'space-between',
			paddingVertical: spacing.sm,
		},
		settingItemLeft: {
			flexDirection: 'row',
			alignItems: 'center',
		},
		settingText: {
			marginLeft: spacing.md,
			fontSize: 18,
			fontWeight: '500',
			color: colors.text.primary,
		},
		loginContainer: {
			flex: 1,
			padding: spacing.md,
			justifyContent: 'center',
			backgroundColor: colors.background.primary,
		},
		loginTitle: {
			fontSize: 24,
			fontWeight: 'bold',
			marginBottom: 30,
			textAlign: 'center',
			color: colors.text.primary,
		},
		inputContainer: {
			flexDirection: 'row',
			alignItems: 'center',
			borderWidth: 1,
			borderColor: colors.border,
			borderRadius: layout.borderRadius.md,
			paddingHorizontal: spacing.md,
			marginBottom: spacing.md,
			backgroundColor: colors.background.secondary,
			height: 50,
		},
		input: {
			flex: 1,
			height: '100%',
			paddingVertical: spacing.md,
			fontSize: 16,
			color: colors.text.primary,
			textAlign: 'center',
		},
		inputLabel: {
			fontSize: 16,
			fontWeight: '700',
			textAlign: 'center',
			color: colors.text.primary,
			opacity: 0.7,
			marginBottom: spacing.sm,
		},
		loginButton: {
			backgroundColor: colors.primary,
			padding: spacing.md,
			borderRadius: layout.borderRadius.md,
			marginTop: spacing.md,
		},
		loginButtonText: {
			color: colors.background.primary,
			textAlign: 'center',
			fontSize: 16,
			fontWeight: '500',
		},
		logoutButton: {
			flexDirection: 'row',
			alignItems: 'center',
			justifyContent: 'center',
			paddingHorizontal: spacing.lg,
			paddingVertical: spacing.sm,
			margin: spacing.xl,
			backgroundColor: colors.background.primary,
			borderRadius: layout.borderRadius.md,
			borderWidth: 1,
			borderColor: colors.danger,
			alignSelf: 'center',
		},
		logoutText: {
			color: colors.danger,
			marginLeft: spacing.sm,
			fontSize: 16,
			fontWeight: '600',
		},
		logoutContainer: {
			padding: spacing.xs,
			marginTop: spacing.xs,
			marginBottom: spacing.xs,
		},
		switchButton: {
			marginTop: spacing.md,
			padding: spacing.sm,
		},
		switchButtonText: {
			color: colors.primary,
			textAlign: 'center',
			fontSize: 14,
		},
		modalContainer: {
			flex: 1,
			backgroundColor: colors.background.overlay,
			justifyContent: 'center',
			padding: spacing.md,
		},
		modalContent: {
			backgroundColor: colors.background.primary,
			borderRadius: layout.borderRadius.lg,
			padding: spacing.md,
		},
		modalHeader: {
			flexDirection: 'row',
			justifyContent: 'space-between',
			alignItems: 'center',
			marginBottom: spacing.md,
		},
		modalTitle: {
			fontSize: 20,
			fontWeight: 'bold',
			color: colors.text.primary,
		},
		privacyOption: {
			flexDirection: 'row',
			alignItems: 'center',
			paddingVertical: spacing.md,
			borderBottomWidth: 1,
			borderBottomColor: colors.border,
		},
		privacyOptionText: {
			marginLeft: spacing.md,
			fontSize: 16,
			color: colors.primary,
		},
		deleteOption: {
			borderBottomWidth: 0,
		},
		deleteText: {
			color: colors.danger,
		},
		loadingOverlay: {
			position: 'absolute',
			top: 0,
			left: 0,
			right: 0,
			bottom: 0,
			backgroundColor: colors.background.overlay,
			justifyContent: 'center',
			alignItems: 'center',
		},
		safeArea: {
			flex: 1,
			backgroundColor: colors.background.primary,
		},
		logoContainer: {
			alignItems: 'center',
			marginBottom: spacing.lg,
			marginTop: spacing.xl,
		},
		logo: {
			width: 250,
			height: 36,
			marginBottom: spacing.xs,
		},
		authContainer: {
			flex: 1,
			justifyContent: 'center',
			paddingHorizontal: spacing.md,
			backgroundColor: colors.background.primary,
		},
		formContainer: {
			width: '100%',
			maxWidth: 400,
			alignSelf: 'center',
		},
		mascotContainer: {
			alignItems: 'center',
			marginBottom: spacing.lg,
		},
		mascot: {
			width: 120,
			height: 120,
			marginBottom: spacing.md,
		},
		welcomeText: {
			fontSize: 24,
			fontWeight: 'bold',
			color: colors.text.primary,
			marginBottom: spacing.sm,
			textAlign: 'center',
		},
		subtitleText: {
			fontSize: 16,
			color: colors.text.secondary,
			marginBottom: spacing.xl,
			textAlign: 'center',
		},
		card: {
			backgroundColor: colors.background.secondary,
			borderRadius: layout.borderRadius.md,
			padding: spacing.md,
			marginVertical: spacing.md,
			marginHorizontal: spacing.md,
			shadowColor: '#000',
			shadowOffset: { width: 0, height: 2 },
			shadowOpacity: 0.1,
			shadowRadius: 4,
			elevation: 2,
		},
		// Section Descriptions
		sectionDescription: {
			fontSize: 16,
			color: colors.text.secondary,
			marginBottom: spacing.md,
		},
		// Highlighted actionable items
		settingHighlighted: {
			backgroundColor: colors.primary,
			padding: spacing.md,
			borderRadius: layout.borderRadius.sm,
			marginBottom: spacing.sm,
		},
		socialButton: {
			flexDirection: 'row',
			alignItems: 'center',
			justifyContent: 'center',
			backgroundColor: colors.background.primary,
			padding: spacing.md,
			borderRadius: layout.borderRadius.md,
			marginTop: spacing.md,
			borderWidth: 1,
			borderColor: colors.border,
		},
		socialButtonText: {
			color: colors.text.primary,
			marginLeft: spacing.sm,
			fontSize: 16,
			fontWeight: '500',
		},
		dividerContainer: {
			flexDirection: 'row',
			alignItems: 'center',
			marginVertical: spacing.md,
		},
		dividerLine: {
			flex: 1,
			height: 1,
			backgroundColor: colors.border,
		},
		dividerText: {
			color: colors.text.secondary,
			paddingHorizontal: spacing.md,
		},
		forgotPasswordButton: {
			alignSelf: 'flex-end',
			marginBottom: spacing.md,
			marginTop: -spacing.sm,
		},
		forgotPasswordText: {
			color: colors.primary,
			fontSize: 14,
		},
		// Profile Page
		headerContainer: {
			flexDirection: 'row',
			alignItems: 'center',
			padding: spacing.md,
			borderBottomWidth: 1,
			borderBottomColor: colors.border,
			backgroundColor: colors.background.secondary,
		},
		backButton: {
			flexDirection: 'row',
			alignItems: 'center',
			paddingVertical: spacing.sm,
		},
		headerTitle: {
			fontSize: 20,
			fontWeight: 'bold',
			color: colors.text.primary,
			marginLeft: spacing.sm,
		},
		profileImageSection: {
			alignItems: 'center',
			paddingVertical: spacing.xl,
		},
		profileImageContainer: {
			position: 'relative',
		},
		profileImage: {
			width: 120,
			height: 120,
			borderRadius: 60,
			backgroundColor: colors.background.secondary,
		},
		editImageButton: {
			position: 'absolute',
			right: 0,
			bottom: 0,
			backgroundColor: colors.primary,
			padding: spacing.sm,
			borderRadius: 20,
			borderWidth: 3,
			borderColor: colors.background.primary,
		},
		formSection: {
			paddingVertical: spacing.lg,
			padding: spacing.md,
		},
		inputGroup: {
			marginBottom: spacing.md,
		},
		label: {
			fontSize: 16,
			color: colors.text.secondary,
			marginBottom: spacing.xs,
			textAlign: 'center',
		},
		input: {
			backgroundColor: colors.background.secondary,
			borderRadius: 8,
			padding: spacing.md,
		},
		inputText: {
			fontSize: 16,
			color: colors.text.primary,
			textAlign: 'center',
		},
		defaultAvatarContainer: {
			width: 120,
			height: 120,
			justifyContent: 'center',
			alignItems: 'center',
		},
		saveButton: {
			backgroundColor: colors.primary,
			padding: spacing.md,
			borderRadius: layout.borderRadius.md,
			marginTop: spacing.md,
			alignItems: 'center',
		},
		saveButtonText: {
			color: colors.text.primary,
			fontSize: 16,
			fontWeight: '500',
			textAlign: 'center',
		},
		saveButtonDisabled: {
			backgroundColor: colors.primary,
			opacity: 0.5, // Only apply opacity to the background
		},
		saveButtonTextDisabled: {
			opacity: 1, // Force full opacity for text
		},
		authInputContainer: {
			flexDirection: 'row',
			alignItems: 'center',
			borderWidth: 1,
			borderColor: colors.border,
			borderRadius: layout.borderRadius.md,
			paddingHorizontal: spacing.md,
			marginBottom: spacing.md,
			backgroundColor: colors.background.secondary,
			height: 50,
			width: '100%',
		},
		authInput: {
			flex: 1,
			height: '100%',
			fontSize: 16,
			color: colors.text.primary,
			paddingRight: spacing.md,
			textAlign: 'center',
		},
		// SchedulingScreen
		settingsHeader: {
			fontSize: 19,
			fontWeight: '700',
			color: colors.text.primary,
			textAlign: 'center',
			marginTop: spacing.xs,
			marginBottom: spacing.xs,
		},
		settingsExplanation: {
			fontSize: 14,
			fontWeight: '500',
			color: colors.text.secondary,
			marginBottom: spacing.md,
			textAlign: 'center',
			marginTop: spacing.xs,
		},
		// Headers for each page under settings
		headerSettingsPages: {
			paddingLeft: spacing.xs,
			paddingRight: spacing.xs,
			flexDirection: 'row',
			alignItems: 'center',
			width: '100%',
			paddingTop: spacing.lg,
			paddingBlockEnd: spacing.xs,
			marginTop: 0,
		},
		// Scheduling
		settingRow: {
			flexDirection: 'row',
			justifyContent: 'space-between',
			alignItems: 'center',
			marginBottom: spacing.sm,
			paddingVertical: spacing.xs,
		},
		iconBackground: {
			width: 36,
			height: 36,
			borderRadius: 18,
			justifyContent: 'center',
			alignItems: 'center',
		},
		// RelationshipTypeSettings.js
		relationshipIntroContainer: {
			backgroundColor: colors.background.secondary,
			padding: spacing.md,
			marginTop: spacing.md,
			marginBottom: spacing.md,
			borderRadius: layout.borderRadius.md,
			marginHorizontal: spacing.md,
		},
		relationshipIntroText: {
			fontSize: 15,
			fontWeight: '600',
			fontStyle: 'italic',
			lineHeight: 20,
			color: colors.text.primary,
			opacity: 0.7,
			textAlign: 'center',
		},
		resetContainer: {
			padding: spacing.md,
			alignItems: 'center',
			marginTop: 'none',
			marginBottom: spacing.xl,
		},
		resetButton: {
			backgroundColor: '#ff7770',
			marginTop: spacing.lg,
			paddingVertical: spacing.md,
			paddingHorizontal: spacing.lg,
			borderRadius: layout.borderRadius.md,
		},
		resetButtonText: {
			color: colors.background.primary,
			fontSize: 16,
			fontWeight: '700',
		},
		// Header for NotificationsSettingsScreen
		sectionHeader: {
			flexDirection: 'row',
			alignItems: 'center',
			marginBottom: spacing.md,
			marginTop: spacing.lg,
		},
		iconTitleContainer: {
			flexDirection: 'row',
			alignItems: 'center',
			flex: 1,
		},
		sectionIcon: {
			marginRight: spacing.md,
		},
		notificationTitle: {
			fontSize: 24,
			fontWeight: '600',
			color: colors.primary,
		},
	});

export const useStyles = () => {
	const { colors } = useTheme();
	return createStyles(colors);
};
