rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Modified owner check specifically for contacts
    match /contacts/{contactId} {
      allow read: if isAuthenticated() && request.auth.uid == resource.data.user_id;
      allow create: if isAuthenticated() && request.resource.data.user_id == request.auth.uid;
      allow update: if isAuthenticated() && 
        request.auth.uid == resource.data.user_id && 
        (
          !request.resource.data.diff(resource.data).affectedKeys()
          .hasAny(['user_id', 'created_at']) || 
          request.resource.data.user_id == request.auth.uid
        );
      allow delete: if isAuthenticated() && request.auth.uid == resource.data.user_id;
    }

    // Updated user rules to allow username checks
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == userId;
      // Allow checking usernames
      allow list: if isAuthenticated() 
        && request.query.limit <= 10 
        && ('username' in request.query.filters);
    }
    
    match /reminders/{reminderId} {
      allow read: if isAuthenticated() && request.auth.uid == resource.data.user_id;
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.user_id;
    }
  }
}
